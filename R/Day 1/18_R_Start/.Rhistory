setwd("C:/Users/Admin/Desktop/BootCamp/Class/R/Day 1/18_R_Start")
# Numeric
a <- 3
b <- 3.1415
typeof(a)
install.packages("dplyr")
library(dplyr)
my_dataframe = data_frame(name = c("Paul", "Kim", "Nora", "Sue", "Pat", "Kyle"),
counts = as.integer(c(3,5)),
measurement=rnorm(6))
my_dataframe
my_dataframe = data_frame(name = c("Paul", "Kim", "Nora", "Sue", "Pat", "Kyle"),
counts = as.integer(c(3,5)),
measurement=rnorm(6))
my_dataframe
my_dataframe = data_frame(name = c("Paul", "Kim", "Nora", "Sue", "Pat", "Kyle"),
counts = as.integer(c(3,5,1,6,4,6)),
measurement=rnorm(6))
View(my_dataframe)
class(my_dataframe)
diamonds
library('ggplot2')
diamonds
install.packages('ggplot2')
install.packages("tidyverse")
#########################################
### Calculate the total number of students
# nrow() returns the number of rows
nrow(students)
students <-read_csv("./data/students.csv")
head(students)
### A list of all schools
# unique(dataset, variable) displays unique elements from that column
unique(students$school_name)
### Calculate the total count of schools
school_count <- unique(students$school_name)
# Use length() to identify the number of schools
length(school_count)
paste("There are", length(school_count), "schools")
library(tidyverse)
students <-read_csv("./data/students.csv")
head(students)
### A list of all schools
# unique(dataset, variable) displays unique elements from that column
unique(students$school_name)
### Calculate the total count of schools
school_count <- unique(students$school_name)
# Use length() to identify the number of schools
length(school_count)
paste("There are", length(school_count), "schools")
#########################################
### Calculate the total number of students
# nrow() returns the number of rows
nrow(students)
### Calculate the average reading and math scores
summarize(students, mean(math_score, reading_score))
### Calculate the average reading and math scores
summarize(students, mean(math_score), mean(reading_score))
library(tidyr)
library(dplyr)
# use line below or import dataset from right...
# This will create a dplyr data_frame for us.
insects <-read_delim("./data/insects.csv", delim=";")
df1 <- data_frame(name = c("Tom", "Ted", "Sue", "Frank", "Jim"),
height =c(177, 173, 181, 169, 188),
category =c("A", "F", "L", "A", "I"))
weight =c(69, 55, 78, 81))
df2 <- data_frame(name = c( "Amy", "Sue", "Nataly", "Jim"),
weight =c(69, 55, 78, 81))
head(df1); head(df2)
library(dplyr) # the functions are part of dplyr
inner_join(df1, df2)
inner_join(df1, df2, by="name")
left_join(df1, df2)
right_join(df1, df2)
full_join(df1, df2)
# Filtering Joins. What is in df1 that isn't in df2?
?anti_join
library(dplyr)
mammals <-read_csv("./data/mammals.csv")
library(tidyverse)
